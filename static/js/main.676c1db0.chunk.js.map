{"version":3,"sources":["components/TemperatureInput.js","components/BoilingVerdict.js","components/Calculator.js","App.js","index.js"],"names":["scaleNames","c","f","temperatureInput","props","handleChange","bind","e","this","onTemperatureChange","target","value","temperature","scale","onChange","React","Component","BoilingVerdict","celsius","toCelsius","fahrenheit","toFahrenheit","tryConvert","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState","TemperatureInput","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAEMA,EAAa,CACfC,EAAG,UACHC,EAAG,cA4BQC,E,kDAxBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFL,E,yDAKJC,GACXC,KAAKJ,MAAMK,oBAAoBF,EAAEG,OAAOC,S,+BAIxC,IAAMC,EAAcJ,KAAKJ,MAAMQ,YACzBC,EAAQL,KAAKJ,MAAMS,MACzB,OACI,kCACI,wDAA8Bb,EAAWa,GAAzC,KACA,2BACIF,MAAOC,EACPE,SAAUN,KAAKH,oB,GAlBJU,IAAMC,WCEtBC,MAPf,SAAwBb,GACpB,OAAIA,EAAMc,SAAW,IACV,oDAEF,yDCFb,SAASC,EAAUC,GACf,OAA2B,GAAnBA,EAAa,IAAU,EAGnC,SAASC,EAAaH,GAClB,OAAkB,EAAVA,EAAc,EAAK,GAG/B,SAASI,EAAWV,EAAaW,GAC7B,IAAMC,EAAQC,WAAWb,GACzB,GAAIc,OAAOC,MAAMH,GACb,MAAO,GAEX,IAAMI,EAASL,EAAQC,GAEvB,OADgBK,KAAKC,MAAe,IAATF,GAAiB,KAC7BG,W,IA8CJC,E,kDA1CX,WAAY5B,GAAQ,IAAD,8BACf,cAAMA,IACD6B,oBAAsB,EAAKA,oBAAoB3B,KAAzB,gBAC3B,EAAK4B,uBAAyB,EAAKA,uBAAuB5B,KAA5B,gBAC9B,EAAK6B,MAAQ,CACTvB,YAAa,IACbC,MAAO,KANI,E,gEAUCD,GAChBJ,KAAK4B,SAAS,CAACvB,MAAO,IAAKD,kB,6CAGRA,GACnBJ,KAAK4B,SAAS,CAACvB,MAAO,IAAKD,kB,+BAI3B,IAAMC,EAAQL,KAAK2B,MAAMtB,MACnBD,EAAcJ,KAAK2B,MAAMvB,YACzBM,EAAoB,MAAVL,EAAgBS,EAAWV,EAAaO,GAAaP,EAC/DQ,EAAuB,MAAVP,EAAgBS,EAAWV,EAAaS,GAAgBT,EAE3E,OACI,6BACI,kBAACyB,EAAD,CACIxB,MAAM,IACND,YAAaM,EACbT,oBAAqBD,KAAKyB,sBAE9B,kBAACI,EAAD,CACIxB,MAAM,IACND,YAAaQ,EACbX,oBAAqBD,KAAK0B,yBAE9B,kBAAC,EAAD,CAAgBhB,QAASO,WAAWP,U,GArC3BH,IAAMC,WCThBsB,MATf,WACE,OACE,6BACE,6DACA,kBAAC,EAAD,QCJNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.676c1db0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst scaleNames = {\r\n    c: 'Celsius',\r\n    f: 'Fahrenheit'\r\n};\r\n\r\nclass temperatureInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleChange = this.handleChange.bind(this);\r\n      }\r\n    \r\n      handleChange(e) {\r\n        this.props.onTemperatureChange(e.target.value);\r\n      }\r\n\r\n    render() {\r\n        const temperature = this.props.temperature;\r\n        const scale = this.props.scale;\r\n        return (\r\n            <fieldset>\r\n                <legend>Enter temperature in {scaleNames[scale]}:</legend>\r\n                <input \r\n                    value={temperature}\r\n                    onChange={this.handleChange}\r\n                />\r\n            </fieldset>\r\n        );\r\n    }\r\n}\r\n\r\nexport default temperatureInput;\r\n","import React from 'react';\r\n\r\nfunction BoilingVerdict(props) {\r\n    if (props.celsius >= 100) {\r\n        return <p>The water would boil.</p>;\r\n      }\r\n      return <p>The water would not boil.</p>;\r\n}\r\n\r\nexport default BoilingVerdict;\r\n","import React from 'react';\r\nimport TemperatureInput from './TemperatureInput'\r\nimport BoilingVerdict from './BoilingVerdict';\r\n\r\nfunction toCelsius(fahrenheit) {\r\n    return (fahrenheit - 32) * 5 / 9;\r\n}\r\n\r\nfunction toFahrenheit(celsius) {\r\n    return (celsius * 9 / 5) + 32;\r\n}\r\n\r\nfunction tryConvert(temperature, convert) {\r\n    const input = parseFloat(temperature);\r\n    if (Number.isNaN(input)) {\r\n        return '';\r\n    }\r\n    const output = convert(input);\r\n    const rounded = Math.round(output * 1000) / 1000;\r\n    return rounded.toString();\r\n}\r\n\r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\r\n        this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\r\n        this.state = {\r\n            temperature: '0',\r\n            scale: 'c'\r\n        };\r\n    }\r\n\r\n    handleCelsiusChange(temperature) {\r\n        this.setState({scale: 'c', temperature})\r\n    }\r\n\r\n    handleFahrenheitChange(temperature) {\r\n        this.setState({scale: 'f', temperature})\r\n    }\r\n\r\n    render() {\r\n        const scale = this.state.scale;\r\n        const temperature = this.state.temperature;\r\n        const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\r\n        const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\r\n\r\n        return (\r\n            <div>\r\n                <TemperatureInput \r\n                    scale=\"c\"\r\n                    temperature={celsius}\r\n                    onTemperatureChange={this.handleCelsiusChange}\r\n                />\r\n                <TemperatureInput \r\n                    scale=\"f\"\r\n                    temperature={fahrenheit}\r\n                    onTemperatureChange={this.handleFahrenheitChange}\r\n                />\r\n                <BoilingVerdict celsius={parseFloat(celsius)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from 'react';\nimport './App.css';\nimport Calculator from './components/Calculator'\n\nfunction App() {\n  return (\n    <div>\n      <h1>Simple Temperature Calculator</h1>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}